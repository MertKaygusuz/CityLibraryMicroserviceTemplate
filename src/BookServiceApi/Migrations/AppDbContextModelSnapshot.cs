// <auto-generated />
using System;
using BookServiceApi.ContextRelated;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookServiceApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("BookServiceApi.Entities.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("BookId"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<short>("AvailableCount")
                        .HasColumnType("smallint");

                    b.Property<string>("BookTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CoverType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime>("EditionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<short>("EditionNumber")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("FirstPublishDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<short>("ReservedCount")
                        .HasColumnType("smallint");

                    b.Property<int>("TitleType")
                        .HasColumnType("int");

                    b.HasKey("BookId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            Author = "Friedrich Engels",
                            AvailableCount = (short)3,
                            BookTitle = "Ailenin, Devletin ve Özel Mülkiyetin Kökeni",
                            CoverType = 1,
                            CreatedAt = new DateTime(2024, 5, 3, 20, 21, 32, 669, DateTimeKind.Utc).AddTicks(6080),
                            EditionDate = new DateTime(1904, 5, 3, 20, 21, 32, 669, DateTimeKind.Utc).AddTicks(6080),
                            EditionNumber = (short)4,
                            FirstPublishDate = new DateTime(1886, 5, 3, 20, 21, 32, 669, DateTimeKind.Utc).AddTicks(6070),
                            ReservedCount = (short)0,
                            TitleType = 3
                        },
                        new
                        {
                            BookId = 2,
                            Author = "Ahmet Ümit",
                            AvailableCount = (short)4,
                            BookTitle = "Beyoğlu Rapsodisi",
                            CoverType = 1,
                            CreatedAt = new DateTime(2024, 5, 3, 20, 21, 32, 669, DateTimeKind.Utc).AddTicks(6090),
                            EditionDate = new DateTime(2019, 5, 3, 20, 21, 32, 669, DateTimeKind.Utc).AddTicks(6080),
                            EditionNumber = (short)4,
                            FirstPublishDate = new DateTime(2005, 5, 3, 20, 21, 32, 669, DateTimeKind.Utc).AddTicks(6080),
                            ReservedCount = (short)0,
                            TitleType = 1
                        },
                        new
                        {
                            BookId = 3,
                            Author = "Ahmet Ümit",
                            AvailableCount = (short)3,
                            BookTitle = "Beyoğlu Rapsodisi",
                            CoverType = 1,
                            CreatedAt = new DateTime(2024, 5, 3, 20, 21, 32, 669, DateTimeKind.Utc).AddTicks(6090),
                            EditionDate = new DateTime(2014, 5, 3, 20, 21, 32, 669, DateTimeKind.Utc).AddTicks(6090),
                            EditionNumber = (short)3,
                            FirstPublishDate = new DateTime(2005, 5, 3, 20, 21, 32, 669, DateTimeKind.Utc).AddTicks(6090),
                            ReservedCount = (short)0,
                            TitleType = 1
                        },
                        new
                        {
                            BookId = 4,
                            Author = "George Brinton Thomas",
                            AvailableCount = (short)500,
                            BookTitle = "Thomas' Calculus",
                            CoverType = 0,
                            CreatedAt = new DateTime(2024, 5, 3, 20, 21, 32, 669, DateTimeKind.Utc).AddTicks(6090),
                            EditionDate = new DateTime(2019, 5, 3, 20, 21, 32, 669, DateTimeKind.Utc).AddTicks(6090),
                            EditionNumber = (short)13,
                            FirstPublishDate = new DateTime(1954, 5, 3, 20, 21, 32, 669, DateTimeKind.Utc).AddTicks(6090),
                            ReservedCount = (short)0,
                            TitleType = 2
                        },
                        new
                        {
                            BookId = 5,
                            Author = "George Brinton Thomas",
                            AvailableCount = (short)50,
                            BookTitle = "Thomas' Calculus",
                            CoverType = 1,
                            CreatedAt = new DateTime(2024, 5, 3, 20, 21, 32, 669, DateTimeKind.Utc).AddTicks(6090),
                            EditionDate = new DateTime(2019, 5, 3, 20, 21, 32, 669, DateTimeKind.Utc).AddTicks(6090),
                            EditionNumber = (short)13,
                            FirstPublishDate = new DateTime(1954, 5, 3, 20, 21, 32, 669, DateTimeKind.Utc).AddTicks(6090),
                            ReservedCount = (short)0,
                            TitleType = 2
                        });
                });

            modelBuilder.Entity("BookServiceApi.Entities.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("UserName")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("UserId");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = "d964dfdf-7cdc-4a7a-a951-04b540bac28d",
                            Address = "Admin's Address",
                            BirthDate = new DateTime(1994, 5, 3, 20, 21, 32, 669, DateTimeKind.Utc).AddTicks(6210),
                            CreatedAt = new DateTime(2024, 5, 3, 20, 21, 32, 669, DateTimeKind.Utc).AddTicks(6220),
                            FullName = "Admin",
                            UserName = "Admin"
                        },
                        new
                        {
                            UserId = "75a4749d-1090-4ade-894e-2612adcd0c1c",
                            Address = "Orhan's Address",
                            BirthDate = new DateTime(1994, 5, 3, 20, 21, 32, 669, DateTimeKind.Utc).AddTicks(6220),
                            CreatedAt = new DateTime(2024, 5, 3, 20, 21, 32, 669, DateTimeKind.Utc).AddTicks(6220),
                            FullName = "Orhan",
                            UserName = "User1"
                        },
                        new
                        {
                            UserId = "1146ae0a-cdf3-4822-a691-98f5da9c3f9e",
                            Address = "Kaya's Address",
                            BirthDate = new DateTime(1984, 5, 3, 20, 21, 32, 669, DateTimeKind.Utc).AddTicks(6220),
                            CreatedAt = new DateTime(2024, 5, 3, 20, 21, 32, 669, DateTimeKind.Utc).AddTicks(6220),
                            FullName = "Kaya",
                            UserName = "User2"
                        },
                        new
                        {
                            UserId = "739d9fdf-f824-40d8-b909-4586bdc283d3",
                            Address = "Kadriye's Address",
                            BirthDate = new DateTime(2004, 5, 3, 20, 21, 32, 669, DateTimeKind.Utc).AddTicks(6220),
                            CreatedAt = new DateTime(2024, 5, 3, 20, 21, 32, 669, DateTimeKind.Utc).AddTicks(6220),
                            FullName = "Kadriye",
                            UserName = "User3"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
